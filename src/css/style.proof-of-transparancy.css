
/* THEME STYLES: This is here because it is the defult, normally this would be 
an external stylesheet on the users computer in the app. Custom themes are not 
supported on the web client version*/
[theme*="ctp-mocha"] {

    /* Colors source: https://github.com/catppuccin/catppuccin#-palette */

    /* The following variables are NOT used by code and can be whatever you want. */
    --red: rgb(243, 139, 168);
    --maroon: rgb(235, 160, 172);
    --orange: rgb(250, 179, 135);
    --yellow: rgb(249, 226, 175);
    --green: rgb(166, 227, 161);
    --teal: rgb(148, 226, 213);
    --sky: rgb(137, 220, 235);
    --sapphire: rgb(116, 199, 236);
    --blue: rgb(137, 180, 250);
    --violet: rgb(180, 190, 254);
    
    /* All the rest of the variables ARE used by code and changing thier 
     * names WILL break things. */
    --accent-color-rgb: var(--sapphire);
    --accent-color: var(--sapphire);
    --hilight-color: rgb(116, 199, 236, 0.5);

    --color-danger: var(--red);
    --color-danger-disabled: rgb(243, 139, 168, 0.25);

    --color-warning: var(--yellow);
    --color-safe: var(--green);
    --color-cta: var(--accent-color);

    /* TIPPY NEEDS HARD-CODED VALUES AND WILL NOT ACCEPT VARIABLES */
    --group-bar-color: rgb(255, 255, 255, .3);
    --border-color: rgb(17, 17, 27);
    --channels-bar-color: rgb(255, 255, 255, .6);
    --main-content-color: rgb(255, 255, 255);
    --ui-box-color: rgb(225, 225, 225, .6);
    --overlay-color: rgb(7, 7, 17);
    --overlay-darken-color: rgb(0, 0, 0, 0.45);

    --color-base: rgb(255, 255, 255, .95);

    --text-color: rgb(3, 11, 58);
    --text-muted: rgb(0, 10, 53);
    --link-color: var(--sapphire);
    --link-text-decoration: none;

    --main-font: 'Noto Sans', sans-serif;
    /* 'Atkinson Hyperlegible', */
    --display-font: var(--main-font);
    --code-font: 'Hack', monospace;

    --message-spacing: 0.5rem;

    --popup-delay: 1000ms; 
}

::selection { 
    background-color: var(--hilight-color);
}

a { 
    color: var(--link-color);
    text-decoration: var(--link-text-decoration);
}

body { 
    background-color: var(--group-bar-color);
}

app { 
    background: linear-gradient(#e66465, #9198e5);;
    font-family: var(--main-font);
    color: var(--text-color);
}

app, .absolute-pane { 
    overflow: hidden;
}

nav * { 
    -ms-overflow-style: none;  /* IE and Edge */
    scrollbar-width: none;  /* Firefox */
}

nav *::-webkit-scrollbar {
  display: none;
}

[role="groups"] { 
    background-color: var(--group-bar-color);
}

[role="groups"] li { 
    border-radius: var(--border-icon-radius);
}

hr { 
    /* width: 80%; */
    height: 0px;
    margin: 0.15rem;
    padding: 0;

    border: 1px solid var(--border-color);
}

[role="groups"] hr { 
    margin: 10% 0.5rem;
}

[role="channels"] { 
    background-color: var(--channels-bar-color);
}



main { 
    background-color: var(--main-content-color);
    scrollbar-color: var(--ctp-mocha-sapphire) var(--ctp-mocha-base);
    scrollbar-width: 6px;
}

main > header { 
    background-color: var(--channels-bar-color);
}

main time { 
    color: var(--text-muted);
}

.author { 
    font-weight: bold;
}

main ul { 
    scrollbar-color: var(--accent-color) var(--base-color);
    scrollbar-width: 6px;
}

main li:hover time { 
    color: var(--text-muted);
}

.message-area { 
    border-top: 1px solid var(--ui-box-color);
}

.expandable-textarea {
    --message-box-buttons: 1;

    background-color: var(--ui-box-color);
    border-radius: var(--border-ui-box-radius);
}

.expandable-textarea:empty::after { 
    --placeholder-message: "Send a message...";
    content: var(--placeholder-message);
}

.expandable-textarea::after { 
    --placeholder-message: "";
    content: "";

    color: var(--text-muted);
}


/* ☢️ You're playing a dangrous game, girl!
 * -----------------------------------------
 * Removing the outline on content makes it harder for people who navigate with 
 * keyboard as they can't see where the focus is. 
 * 
 * In this case, it should be fine as the cursor indicator is present but avoid
 * doing this in any other case unless you re-implement a focus state. 
 * 
 * And no, since this is conteneditable :focus-visible is the defult and won't
 * work because of that.
 */
.expandable-textarea:focus { 
    outline: 0; /* See above warning */
}

header { 
    font-family: var(--display-font);
}

[role="profile"] { 
    background-color: var(--channels-bar-color);
}

.muted { 
    color: var(--text-muted);
}

header vr + * {
    margin-left: auto;
} 

button { 
    background-color: var(--ui-box-color);
    border: 0;
}

.header-button { 
    width: 1.5rem;
    height: 1.5rem;
}

.round-button { 
    width: var(--round-button-size);
    height: var(--round-button-size);

    margin: var(--standard-margin);

    border-radius: 500rem;
}

svg { 
    fill: var(--text-color);
}

*:hover > svg { 
    fill: var(--accent-color);
}

.button-rect { 
    border-radius: var(--border-ui-box-radius);
    color: var(--text-color);
}

.button-normal:hover { 
    color: var(--accent-color);
}

.button-cta { 
    background-color: var(--accent-color);
    color: var(--ui-box-color);
    /* border: 1px solid var(--accent-color); */
}

.button-danger-wait {
    background-image: linear-gradient(to right, var(--ui-box-color) 50%, var(--color-danger-disabled) 50%);
    color: var(--color-danger);
    text-shadow: 0px 0px 4px var(--ui-box-color);
}

.button-danger-wait:hover {
    color: var(--color-danger);
}

.button-danger { 
    color: var(--color-danger);
    text-shadow: 0px 0px 4px var(--ui-box-color);
}

.button-danger:hover { 
    color: var(--color-danger);
    background-color: var(--color-danger-disabled);
}

.button-cta:hover { 
    opacity: .7;
}

.button-text { 
    background-color: transparent;
    color: var(--text-color);
}

.button-text:hover { 
    text-decoration: underline;
    color: var(--text-color);
}

/* ********* COPYPASTA STARTS ************ */

/* FROM CSSTRICKS @ https://css-tricks.com/custom-styling-form-inputs-with-modern-css-features/ OR https://codepen.io/aaroniker/pen/ZEYoxEY (it's literally 1:1 minus some variables and pickey tweaks) */

/* TODO: Fix the colors, they are just temperary rn */
/* TODO: Not yet sortted into "layout" and "visual" */

@supports (-webkit-appearance: none) or (-moz-appearance: none) {

input[type=checkbox]:disabled,
input[type=radio]:disabled {
    --active-inner: var(--mocha-blue);
} 

input[type=checkbox],
input[type=radio] {
  --active: var(--accent-color);
  --active-inner: var(--ui-box-color);
  --inactive-inner: var(--accent-color); 
  --border: var(--ui-box-color); 
  --border-hover: var(--accent-color);
  --background: var(--ui-box-color); 

  --disabled: var(--group-bar-color);
  --disabled-inner: var(--group-bar-color);

    appearance: none;
    
    height: 21px;
    display: inline-block;
    vertical-align: top;
    position: relative;
    margin: 0;
    cursor: pointer;
    border: 1px solid var(--bc, var(--border));
    background: var(--b, var(--background));
    transition: background 0.3s, border-color 0.3s, box-shadow 0.2s;
}
input[type=checkbox]:after,
input[type=radio]:after {
    content: "";

        /* content: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>';  */

    display: block;
    left: 0;
    top: 0;
    position: absolute;

    transition: transform var(--d-t, 0.3s) var(--d-t-e, ease), opacity var(--d-o, 0.2s);
}
input[type=checkbox]:checked,
    input[type=radio]:checked {
    --b: var(--active);
    --bc: var(--active);
    --d-o: .3s;
    --d-t: .6s;
    --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
}
input[type=checkbox]:disabled,
input[type=radio]:disabled {
    --b: var(--disabled);
    cursor: not-allowed;
    opacity: 0.9;
}
input[type=checkbox]:disabled:checked,
input[type=radio]:disabled:checked {
    --b: var(--disabled-inner);
    --bc: var(--border);
}
input[type=checkbox]:disabled + label,
input[type=radio]:disabled + label {
    cursor: not-allowed;  
}
input[type=checkbox]:hover:not(:checked):not(:disabled),
input[type=radio]:hover:not(:checked):not(:disabled) {
    --bc: var(--border-hover);
}
input[type=checkbox]:focus,
input[type=radio]:focus {
    box-shadow: 0 0 0 var(--focus);
}
input[type=checkbox]:not(.switch),
input[type=radio]:not(.switch) {
    width: 21px;
}
input[type=checkbox]:not(.switch):after,
input[type=radio]:not(.switch):after {
    opacity: var(--o, 0);
}
input[type=checkbox]:not(.switch):checked,
input[type=radio]:not(.switch):checked {
    --o: 1;
}
input[type=checkbox] + label,
input[type=radio] + label {
    font-size: 14px;
    line-height: 21px;
    display: inline-block;
    vertical-align: top;
    cursor: pointer;
    margin-left: 4px;
}

input[type=checkbox]:not(.switch) {
    border-radius: var(--border-ui-box-radius);
}
input[type=checkbox]:not(.switch):after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
}
input[type=checkbox]:not(.switch):checked {
    --r: 43deg;
}
input[type=checkbox].switch {
    width: 38px;
    border-radius: 11px;
}
input[type=checkbox].switch:after {
    left: 2px;
    top: 2px;
    border-radius: 50%;
    width: 15px;
    height: 15px;
    background: var(--ab, var(--inactive-inner));
    transform: translateX(var(--x, 0));
}
input[type=checkbox].switch:checked {
    --ab: var(--active-inner);
    --x: 17px;
}
input[type=checkbox].switch:disabled:not(:checked):after {
    opacity: 0.6;
}

label { 
    cursor: pointer;
}

input[type=radio] {
    border-radius: 50%;
    margin-right: var(--small-margin);
}
input[type=radio]:not(:checked) {
    border: 1px solid var(--text-muted);
}
input[type=radio]:after {
    width: 5px;
    height: 9px;
    border: 2px solid var(--active-inner);
    border-top: 0;
    border-left: 0;
    left: 7px;
    top: 4px;
    transform: rotate(var(--r, 20deg));
}
input[type=radio]:checked {
    --r: 43deg;
  --s: .5;
}
}

/* mine again :3 (also its now sorted again) */

.radio-option { 
    padding: var(--standard-padding);
    margin: var(--small-margin);

    display: flex;

    border-radius: var(--border-ui-box-radius);
    background-color: var(--ui-box-color);
}


/* ADD CLASSES */

.my-message {}
.bot-message {}
.ping-message {}



/* slider base code from https://www.w3schools.com/howto/howto_js_rangeslider.asp */
/* TODO: Not yet sortted into "layout" and "visual" */

input[type="range"] {
    -webkit-appearance: none;
    width: 100%;
    height: 4px;
    border-radius: 5px;  
    background: var(--ui-box-color);
    outline: none;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 1rem;
    height: 1rem;
    border-radius: 50%; 
    background: var(--accent-color);
    cursor: pointer;
    border: 0;
    outline: 0;
}

input[type="range"]::-moz-range-thumb {
  width: 1rem;
  height: 1rem;
  border-radius: 50%;
  background: var(--accent-color);
  cursor: pointer;
  border: 0;
    outline: 0;
}



/* How to style select?? also we need colors and ranges and sliders */

/* Select dropdowns are generated by the brower/os and NOT by the html/css, so we need this to style it.
see this stack overflow question: https://stackoverflow.com/questions/7208786/how-to-style-the-option-of-an-html-select-element */

.s-hidden {
  visibility: hidden;
  padding-right: 10px;
}

.select {
  cursor: pointer;
  display: inline-block;
  position: relative;
  font: normal 11px/22px Arial, Sans-Serif;
  color: black;
  border: 1px solid #ccc;
}

.styledSelect {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: white;
  padding: 0 10px;
  font-weight: bold;
}

.styledSelect:after {
  content: "";
  width: 0;
  height: 0;
  border: 5px solid transparent;
  border-color: black transparent transparent transparent;
  position: absolute;
  top: 9px;
  right: 6px;
}

.styledSelect:active,
.styledSelect.active {
  background-color: #eee;
}

.options {
  display: none;
  position: absolute;
  top: 100%;
  right: 0;
  left: 0;
  z-index: 999;
  margin: 0 0;
  padding: 0 0;
  list-style: none;
  border: 1px solid #ccc;
  background-color: white;
  -webkit-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  -moz-box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
}

.options li {
  padding: 0 6px;
  margin: 0 0;
  padding: 0 10px;
}

.options li:hover {
  background-color: #39f;
  color: white;
}

/* Sorted again <3 */

.context-menu { 
    --context-menu-width: calc(var(--channels-bar-width) + 2rem);

    background-color: var(--group-bar-color);
    width: var(--context-menu-width);

    border-radius: var(--border-ui-box-radius);
    padding: var(--small-padding);
}

.context-menu li:hover { 
    background-color: var(--color-base);
    border-radius: var(--border-ui-box-radius);
}

.absolute-pane button { 
    text-align: left;
    color: inherit;

    background-color: inherit;
    border-radius: var(--border-ui-box-radius);

    transition: 50ms;
}

.absolute-pane button:hover { 
    background-color: var(--color-base);
}


.modal { 
    box-shadow: 4px 0px 0px 10000rem var(--overlay-darken-color);
    background-color: var(--ui-box-color);
    border-radius: var(--border-ui-box-radius);
}

.danger, .danger svg { 
    color: var(--color-danger);
    fill: var(--color-danger);
}

a { 
    text-decoration: none;
    color: var(--accent-color);
}

a:hover { 
    text-decoration: none;
    color: var(--accent-color);
    opacity: .7;
}

a { 
    cursor: pointer;
}

a.author { 
    color: var(--text-color);
}

a.author:hover { 
    opacity: 1;
    text-decoration: underline;
}

.tippy-box[data-theme~='dark'] {
    background-color: rgb(17, 17, 27);
    color: rgb(198, 208, 245);
    font-family: 'Noto Sans', sans-serif;
    margin-left: 0.5rem;
    margin-top: -0.5rem;
}


/* Not sorted :c  */
.tippy-box[data-theme~='dark'][data-placement^='top'] > .tippy-arrow::before {
    border-top-color: rgb(17, 17, 27);
}
.tippy-box[data-theme~='dark'][data-placement^='bottom'] > .tippy-arrow::before {
    border-bottom-color: rgb(17, 17, 27);
}
.tippy-box[data-theme~='dark'][data-placement^='left'] > .tippy-arrow::before {
    border-left-color: rgb(17, 17, 27);
}
.tippy-box[data-theme~='dark'][data-placement^='right'] > .tippy-arrow::before {
    border-right-color: rgb(17, 17, 27);
}

.tippy-box[data-theme~='dark'] > .tippy-arrow::before {
    transform: scale(0.75);
}

.tippy-box[data-animation=shift-away-subtle][data-state=hidden]{opacity:0}.tippy-box[data-animation=shift-away-subtle][data-state=hidden][data-placement^=top]{transform:translateY(5px)}.tippy-box[data-animation=shift-away-subtle][data-state=hidden][data-placement^=bottom]{transform:translateY(-5px)}.tippy-box[data-animation=shift-away-subtle][data-state=hidden][data-placement^=left]{transform:translateX(5px)}.tippy-box[data-animation=shift-away-subtle][data-state=hidden][data-placement^=right]{transform:translateX(-5px)}